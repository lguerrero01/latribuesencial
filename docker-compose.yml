version: '3.7'

# Docker Networks
networks: 
  tribu_networking:

# Docker Volumes
volumes:
  redis-data:

services: 

  # SQLS Service
  tribu_sql:
    image: mysql:5.7.22
    container_name: tribu_sql
    restart: unless-stopped
    tty: true
    ports: 
      - "3306:3306"
    environment:
      MYSQL_DATABASE: tribu_sql
      MYSQL_USER: tribu_sql
      MYSQL_PASSWORD: tribu_sql
      MYSQL_ROOT_PASSWORD: tribu_sql
      SERVICE_TAGS: dev
      SERVICE_NAME: tribu_sql
    networks:
      - tribu_networking


# Nginx Service
  tribu_nginx:
    image: nginx:stable
    container_name: tribu_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes: 
      - ./backend:/var/www/backend
      - ./frontend:/var/www/frontend
      - ./docker-compose/default.conf:/etc/nginx/conf.d/default.conf
    networks: 
      - tribu_networking

# Redis Service
  tribu_redis:
    container_name: tribu_redis
    image: redis:5.0
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks: 
      - tribu_networking
    volumes:
      - redis-data:/data

# Laravel Service
  tribu_backend:
    build: 
      context: "./"
      dockerfile: "./backend/Dockerfile"
    container_name: tribu_backend
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: tribu_backend
      SERVICE_TAGS: dev
    working_dir: /var/www/backend
    volumes: 
      - ./backend:/var/www/backend
    ports:
      - "9000:9000"
    networks: 
      - tribu_networking
    depends_on:
      - tribu_redis

# Angular Service
  tribu_frontend:
    build: 
      context: "./"
      dockerfile: "./frontend/Dockerfile"
    container_name: tribu_frontend
    restart: unless-stopped
    tty: true
    ports: 
      - "4200:4200"
    working_dir: /var/www/frontend
    volumes: 
      - ./frontend:/var/www/frontend
    networks: 
      - tribu_networking